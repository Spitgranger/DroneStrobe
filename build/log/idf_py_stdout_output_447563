[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/test_fous.c.obj
[2/9] Performing build step for 'bootloader'
[1/1] cd /home/richard/Documents/Projects/esp-idf/prototype0/build/bootloader/esp-idf/esptool_py && /home/richard/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/richard/Documents/Projects/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/richard/Documents/Projects/esp-idf/prototype0/build/bootloader/bootloader.bin
Bootloader binary size 0x5430 bytes. 0x2bd0 bytes (34%) free.
[3/9] No install step for 'bootloader'
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Completed 'bootloader'
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable test_fous.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32c6 image...
Merged 3 ELF sections
Successfully created esp32c6 image.
Generated /home/richard/Documents/Projects/esp-idf/prototype0/build/test_fous.bin
[9/9] cd /home/richard/Documents/Projects/esp-idf/prototype0/build/esp-idf/esptool_py && /home/richard/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/richard/Documents/Projects/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/richard/Documents/Projects/esp-idf/prototype0/build/partition_table/partition-table.bin /home/richard/Documents/Projects/esp-idf/prototype0/build/test_fous.bin
test_fous.bin binary size 0x251f0 bytes. Smallest app partition is 0x100000 bytes. 0xdae10 bytes (85%) free.
