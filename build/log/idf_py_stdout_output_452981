[1/10] Performing build step for 'bootloader'
[1/1] cd /home/richard/Documents/Projects/esp-idf/prototype0/build/bootloader/esp-idf/esptool_py && /home/richard/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/richard/Documents/Projects/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/richard/Documents/Projects/esp-idf/prototype0/build/bootloader/bootloader.bin
Bootloader binary size 0x5430 bytes. 0x2bd0 bytes (34%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/test_fous.c.obj
[4/10] Completed 'bootloader'
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable test_fous.elf
[8/10] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32c6 image...
Merged 3 ELF sections
Successfully created esp32c6 image.
Generated /home/richard/Documents/Projects/esp-idf/prototype0/build/test_fous.bin
[9/10] cd /home/richard/Documents/Projects/esp-idf/prototype0/build/esp-idf/esptool_py && /home/richard/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/richard/Documents/Projects/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/richard/Documents/Projects/esp-idf/prototype0/build/partition_table/partition-table.bin /home/richard/Documents/Projects/esp-idf/prototype0/build/test_fous.bin
test_fous.bin binary size 0x251e0 bytes. Smallest app partition is 0x100000 bytes. 0xdae20 bytes (86%) free.
[9/10] cd /home/richard/Documents/Projects/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/richard/Documents/Projects/esp-idf -D "SERIAL_TOOL=/home/richard/.espressif/python_env/idf5.3_py3.12_env/bin/python;;/home/richard/Documents/Projects/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c6" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/richard/Documents/Projects/esp-idf/prototype0/build -P /home/richard/Documents/Projects/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c6 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 test_fous.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-C6 (QFN40) (revision v0.0)
Features: WiFi 6, BT 5, IEEE802.15.4
Crystal is 40MHz
MAC: 40:4c:ca:ff:fe:51:57:f0
BASE MAC: 40:4c:ca:51:57:f0
MAC_EXT: ff:fe
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00035fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 21552 bytes to 12993...
Writing at 0x00000000... (100 %)
Wrote 21552 bytes (12993 compressed) at 0x00000000 in 0.6 seconds (effective 313.3 kbit/s)...
Hash of data verified.
Compressed 152032 bytes to 78692...
Writing at 0x00010000... (20 %)
Writing at 0x0001a2ed... (40 %)
Writing at 0x00020ca2... (60 %)
Writing at 0x00028087... (80 %)
Writing at 0x0002f2b2... (100 %)
Wrote 152032 bytes (78692 compressed) at 0x00010000 in 2.0 seconds (effective 606.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 626.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
